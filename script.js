let balance = 0;
let gifts = ["üåü –°—É–ø–µ—Ä–ø–æ–¥–∞—Ä–æ–∫", "üéà –í–æ–∑–¥—É—à–Ω—ã–π —à–∞—Ä", "üß∏ –ú–∏—à–∫–∞", "üç´ –®–æ–∫–æ–ª–∞–¥–∫–∞", "üß® –ü—É—Å—Ç–æ"];

const tg = window.Telegram.WebApp;
const user_id = tg.initDataUnsafe.user.id;

function updateUI() {
  document.getElementById("balance").innerText = balance;
}

function earnCoins() {
  const earned = Math.floor(Math.random() * 5) + 1;
  balance += earned;
  alert(`–í—ã –ø–æ–ª—É—á–∏–ª–∏ ${earned} –º–æ–Ω–µ—Ç!`);
  updateUI();
}

function openCase() {
  if (balance < 10) {
    alert("–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –º–æ–Ω–µ—Ç!");
    return;
  }

  balance -= 10;
  const gift = gifts[Math.floor(Math.random() * gifts.length)];
  document.getElementById("history").innerHTML += `<li>${gift}</li>`;
  updateUI();
}

async function fetchBalance() {
  try {
    const response = await fetch("http://localhost:8080/get_balance", {
      method: "POST",
      headers: {
        "Content-Type": "application/json"
      },
      body: JSON.stringify({ user_id: user_id })
    });

    const data = await response.json();
    if (data.balance !== undefined) {
      balance = data.balance;
      updateUI();
    } else {
      alert("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –±–∞–ª–∞–Ω—Å–∞");
    }
  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞:", error);
    alert("–°–µ—Ä–≤–µ—Ä –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç");
  }
}

// –ó–∞–≥—Ä—É–∂–∞–µ–º –±–∞–ª–∞–Ω—Å –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ
fetchBalance();

